from nvidia/cuda:11.5.0-devel-ubuntu20.04
COPY env /root/env
WORKDIR /root
SHELL ["/bin/bash", "--login", "-c"]
RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive TZ=Asia/Shanghai apt-get -y install tzdata
RUN apt-get install -y wget git cmake llvm rsync
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh &&  bash Miniconda3-latest-Linux-x86_64.sh -b
# RUN . ~/miniconda3/etc/profile.d/conda.sh && conda init
ENV PATH="/root/miniconda3/bin:${PATH}"
RUN source /root/miniconda3/etc/profile.d/conda.sh && conda create python=3.8 --name baseline_tf1 -y && conda activate baseline_tf1 && pip install nvidia-pyindex && pip install -r env/requirements_tf.txt && mkdir third-party && cd third-party && git clone https://github.com/onnx/onnx-tensorflow.git && cd onnx-tensorflow && git checkout 0e4f4836 && git apply /root/env/onnx_tf.patch && pip install -e . && cd ../.. && conda deactivate
RUN source /root/miniconda3/etc/profile.d/conda.sh && conda create python=3.8 --name baseline_jax -y && conda activate baseline_jax && pip install nvidia-pyindex && pip install -r env/requirements_jax.txt -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html -f https://download.pytorch.org/whl/torch_stable.html && conda deactivate
RUN source /root/miniconda3/etc/profile.d/conda.sh && conda create python=3.7 --name controlflow -y && conda activate controlflow && pip install nvidia-pyindex && pip install -r env/requirements_pytorch.txt -f https://download.pytorch.org/whl/torch_stable.html && conda deactivate
RUN source /root/miniconda3/etc/profile.d/conda.sh && conda create python==3.8 --name kerneldb -y && conda activate kerneldb && pip install ply==3.11 && mkdir -p third-party && cd third-party && git clone https://github.com/apache/tvm.git && cd tvm && git checkout 22ba6523c && git submodule init && git submodule update && git apply ../../env/tvm.patch && mkdir build && cd build && cp ../cmake/config.cmake config.cmake && sed -i "s/USE_CUDA OFF/USE_CUDA ON/g" config.cmake && sed -i "s/USE_LLVM OFF/USE_LLVM ON/g" config.cmake && cmake .. && make -j && cd ../python && pip install -e . && conda deactivate
RUN cd env && bash install_nnfusion_dependency.sh && cd ..
